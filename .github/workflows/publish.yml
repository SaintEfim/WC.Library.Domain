name: Publish Libraries to NuGet

on:
  push:
    branches:
      - main

jobs:
  publish:
    runs-on: ubuntu-latest

    env:
      NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8.0.x

      - name: Build and Publish Libraries
        run: |
          bump_version_in_csproj() {
            PROJECT_PATH=$1
            NEW_VERSION=$2
            sed -i "s|<Version>.*</Version>|<Version>$NEW_VERSION</Version>|g" $PROJECT_PATH
          }

          publish_package() {
            PACKAGE_ID=$1
            PROJECT_PATH=$2
            echo "Processing package: $PACKAGE_ID"
          
            # Получаем последнюю версию
            PACKAGE_VERSION=$(curl -s https://api.nuget.org/v3-flatcontainer/${PACKAGE_ID}/index.json | jq -r '.versions[-1]')
            if [ -z "$PACKAGE_VERSION" ]; then
            echo "No versions found for $PACKAGE_ID. Starting from 1.0.0."
            NEW_VERSION="1.0.0"
            else
            echo "Latest version of $PACKAGE_ID: $PACKAGE_VERSION"
            NEW_VERSION=$(echo $PACKAGE_VERSION | awk -F. -v OFS=. '{$NF++; print}')
            fi
            echo "New version: $NEW_VERSION"
          
            # Обновляем версию в .csproj
            update_version_in_csproj $PROJECT_PATH $NEW_VERSION
          
            # Сборка и упаковка
            dotnet build $PROJECT_PATH --configuration Release
            dotnet pack $PROJECT_PATH --configuration Release
          
            # Определяем путь до .nupkg
            NUPKG_FILE=$(find "$(dirname "$PROJECT_PATH")/bin/Release" -name "*.nupkg" -type f)
            echo "NUPKG File $NUPKG_FILE"
            if [ -z "$NUPKG_FILE" ]; then
            echo "Error: .nupkg file not found for $PACKAGE_ID"
            exit 1
            fi
          
            # Публикуем в NuGet
            dotnet nuget push "$NUPKG_FILE" -k $NUGET_API_KEY -s https://api.nuget.org/v3/index.json --skip-duplicate
          }

          # Process each package
          publish_package "wc.library.domain.abstractions" "src/WC.Library.Domain.Abstractions/WC.Library.Domain.Abstractions.csproj"
          publish_package "wc.library.domain" "src/WC.Library.Domain/WC.Library.Domain.csproj"

